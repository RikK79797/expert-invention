# .gitlab-ci.yml
# –ü–∞–π–ø–ª–∞–π–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ bash-—Å–∫—Ä–∏–ø—Ç–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

stages:
  - prepare
  - execute

variables:
  SCRIPT_PATH: "script.sh"  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É .sh-—Ñ–∞–π–ª—É
  SCRIPT_BRANCH: "main"             # –í–µ—Ç–∫–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –∫–ª–æ–Ω–∏—Ä—É–µ–º

before_script:
  - echo "üåç –ó–∞–ø—É—Å–∫ CI/CD –ø–∞–π–ø–ª–∞–π–Ω–∞..."
  - apt-get update -qq
  - apt-get install -y -qq git curl sudo > /dev/null 2>&1 || true
  - echo "‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –≠—Ç–∞–ø: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–µ –≤ —Ç–µ–∫—É—â–µ–º)
clone_repository:
  stage: prepare
  image: alpine/git
  script:
    - echo "üîÅ –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $CI_PROJECT_URL"
    - git clone --branch "$SCRIPT_BRANCH" "$CI_REPOSITORY_URL" ./repo
    - cd repo
    - if [ -f "$SCRIPT_PATH" ]; then
        echo "üü¢ –°–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω: $SCRIPT_PATH";
      else
        echo "‚ùå –û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç $SCRIPT_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω!";
        exit 1;
      fi
    - chmod +x "$SCRIPT_PATH"
    - cp "$SCRIPT_PATH" /script.sh
  artifacts:
    paths:
      - script.sh
    expire_in: 1 hour

# –≠—Ç–∞–ø: –ó–∞–ø—É—Å–∫ –≤–∞—à–µ–≥–æ .sh-—Å–∫—Ä–∏–ø—Ç–∞
run_script:
  stage: execute
  image: ubuntu:22.04
  before_script:
    - apt-get update -qq && apt-get install -y -qq bash > /dev/null 2>&1
  script:
    - echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞—à —Å–∫—Ä–∏–ø—Ç..."
    - chmod +x script.sh
    - ./script.sh
  needs:
    - job: clone_repository
      artifacts: true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"  # –ó–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ main
